// Generated by generate-stores-config from stores.rs comments for testing
{
  servers: [],
  stores: [
    {
      name: "0",
      "memory": {
       "eviction_policy": {
         "max_bytes": "10mb",
       }
     }
    },
    {
      name: "1",
      "experimental_cloud_object_store": {
         "provider": "aws",
         "region": "eu-north-1",
         "bucket": "crossplane-bucket-af79aeca9",
         "key_prefix": "test-prefix-index/",
         "retry": {
           "max_retries": 6,
           "delay": 0.3,
           "jitter": 0.5
         },
         "multipart_max_concurrent_uploads": 10
       }
    },
    {
      name: "2",
      "experimental_cloud_object_store": {
         "provider": "gcs",
         "bucket": "test-bucket",
         "key_prefix": "test-prefix-index/",
         "retry": {
           "max_retries": 6,
           "delay": 0.3,
           "jitter": 0.5
         },
         "multipart_max_concurrent_uploads": 10
       }
    },
    {
      name: "3",
      "experimental_cloud_object_store": {
          "provider": "ontap",
          "endpoint": "https://ontap-s3-endpoint:443",
          "vserver_name": "your-vserver",
          "bucket": "your-bucket",
          "root_certificates": "/path/to/certs.pem",  // Optional
          "key_prefix": "test-prefix/",               // Optional
          "retry": {
            "max_retries": 6,
            "delay": 0.3,
            "jitter": 0.5
          },
          "multipart_max_concurrent_uploads": 10
        }
    },
    {
      name: "4",
      "ontap_s3_existence_cache": {
       "index_path": "/path/to/cache/index.json",
       "sync_interval_seconds": 300,
       "backend": {
         "endpoint": "https://ontap-s3-endpoint:443",
         "vserver_name": "your-vserver",
         "bucket": "your-bucket",
         "key_prefix": "test-prefix/"
       }
     }
    },
    {
      name: "5",
      "verify": {
       "backend": {
         "memory": {
           "eviction_policy": {
             "max_bytes": "500mb"
           }
         },
       },
       "verify_size": true,
       "verify_hash": true
     }
    },
    {
      name: "6",
      "completeness_checking": {
       "backend": {
         "filesystem": {
           "content_path": "~/.cache/nativelink/content_path-ac",
           "temp_path": "~/.cache/nativelink/tmp_path-ac",
           "eviction_policy": {
             "max_bytes": "500mb",
           }
         }
       },
       "cas_store": {
         "ref_store": {
           "name": "CAS_MAIN_STORE"
         }
       }
     }
    },
    {
      name: "7",
      "compression": {
       "compression_algorithm": {
         "lz4": {}
       },
       "backend": {
         "filesystem": {
           "content_path": "/tmp/nativelink/data/content_path-cas",
           "temp_path": "/tmp/nativelink/data/tmp_path-cas",
           "eviction_policy": {
             "max_bytes": "2gb",
           }
         }
       }
     }
    },
    {
      name: "8",
      "dedup": {
       "index_store": {
         "memory": {
           "eviction_policy": {
              "max_bytes": "1GB",
           }
         }
       },
       "content_store": {
         "compression": {
           "compression_algorithm": {
             "lz4": {}
           },
           "backend": {
             "fast_slow": {
               "fast": {
                 "memory": {
                   "eviction_policy": {
                     "max_bytes": "500MB",
                   }
                 }
               },
               "slow": {
                 "filesystem": {
                   "content_path": "/tmp/nativelink/data/content_path-content",
                   "temp_path": "/tmp/nativelink/data/tmp_path-content",
                   "eviction_policy": {
                     "max_bytes": "2gb"
                   }
                 }
               }
             }
           }
         }
       }
     }
    },
    {
      name: "9",
      "existence_cache": {
       "backend": {
         "memory": {
           "eviction_policy": {
             "max_bytes": "500mb",
           }
         }
       },
       // Note this is the existence store policy, not the backend policy
       "eviction_policy": {
         "max_seconds": 100,
       }
     }
    },
    {
      name: "10",
      "fast_slow": {
       "fast": {
         "filesystem": {
           "content_path": "/tmp/nativelink/data/content_path-index",
           "temp_path": "/tmp/nativelink/data/tmp_path-index",
           "eviction_policy": {
             "max_bytes": "500mb",
           }
         }
       },
       "slow": {
         "filesystem": {
           "content_path": "/tmp/nativelink/data/content_path-index",
           "temp_path": "/tmp/nativelink/data/tmp_path-index",
           "eviction_policy": {
             "max_bytes": "500mb",
           }
         }
       }
     }
    },
    {
      name: "11",
      "shard": {
       "stores": [
        {
         "store": {
           "memory": {
             "eviction_policy": {
                 "max_bytes": "10mb"
             },
           },
         },
         "weight": 1
       }]
     }
    },
    {
      name: "12",
      "filesystem": {
       "content_path": "/tmp/nativelink/data-worker-test/content_path-cas",
       "temp_path": "/tmp/nativelink/data-worker-test/tmp_path-cas",
       "eviction_policy": {
         "max_bytes": "10gb",
       }
     }
    },
    {
      name: "13",
      "ref_store": {
       "name": "FS_CONTENT_STORE"
     }
    },
    {
      name: "14",
      "size_partitioning": {
       "size": "128mib",
       "lower_store": {
         "memory": {
           "eviction_policy": {
             "max_bytes": "${NATIVELINK_CAS_MEMORY_CONTENT_LIMIT:-100mb}"
           }
         }
       },
       "upper_store": {
         /// This store discards data larger than 128mib.
         "noop": {}
       }
     }
    },
    {
      name: "15",
      "grpc": {
       "instance_name": "main",
       "endpoints": [
         {"address": "grpc://${CAS_ENDPOINT:-127.0.0.1}:50051"}
       ],
       "store_type": "ac"
     }
    },
    {
      name: "16",
      "redis_store": {
       "addresses": [
         "redis://127.0.0.1:6379/",
       ]
     }
    },
    {
      name: "17",
      "noop": {}
    },
    {
      name: "18",
      "experimental_mongo": {
         "connection_string": "mongodb://localhost:27017",
         "database": "nativelink",
         "cas_collection": "cas",
         "key_prefix": "cas:",
         "read_chunk_size": 65536,
         "max_concurrent_uploads": 10,
         "enable_change_streams": false
     }
    },
]}
