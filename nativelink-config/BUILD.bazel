load(
    "@rules_rust//rust:defs.bzl",
    "rust_doc",
    "rust_doc_test",
    "rust_library",
    "rust_test_suite",
)

rust_library(
    name = "nativelink-config",
    srcs = [
        "src/cas_server.rs",
        "src/lib.rs",
        "src/schedulers.rs",
        "src/serde_utils.rs",
        "src/stores.rs",
    ],
    compile_data = [
        "README.md",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@crates//:byte-unit",
        "@crates//:humantime",
        "@crates//:serde",
        "@crates//:shellexpand",
    ],
)

rust_test_suite(
    name = "integration",
    timeout = "short",
    srcs = [
        "tests/deserialization_test.rs",
    ],
    deps = [
        "//nativelink-config",
        "//nativelink-error",
        "@crates//:byte-unit",
        "@crates//:humantime",
        "@crates//:pretty_assertions",
        "@crates//:serde",
        "@crates//:serde_json5",
        "@crates//:serde_test",
    ],
)

rust_doc(
    name = "docs",
    crate = ":nativelink-config",
    visibility = ["//visibility:public"],
)

rust_doc(
    name = "docs_json",
    crate = ":nativelink-config",
    rustdoc_flags = [
        "--output-format=json",
        "-Zunstable-options",
    ],
    target_compatible_with = select({
        "@local-remote-execution//rust:nightly": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
)

rust_doc_test(
    name = "doc_test",
    timeout = "short",
    crate = ":nativelink-config",
)
