[workspace]
resolver = "2"

[package]
edition = "2024"
name = "nativelink"
rust-version = "1.86.0"
version = "0.6.0"

[profile.release]
lto = true

# Prefer this profile in CI, for instance via `cargo test --all --profile=smol`.
# It reduces the size of the `target` directory from ~12GB to ~1GB.
[profile.smol]
debug = false
inherits = "dev"
opt-level = "z"
strip = true

[[bin]]
name = "nativelink"

[features]
nix = ["nativelink-worker/nix"]

[dependencies]
nativelink-config = { path = "nativelink-config" }
nativelink-error = { path = "nativelink-error" }
nativelink-metric = { path = "nativelink-metric" }
nativelink-metric-collector = { path = "nativelink-metric-collector" }
nativelink-scheduler = { path = "nativelink-scheduler" }
nativelink-service = { path = "nativelink-service" }
nativelink-store = { path = "nativelink-store" }
nativelink-util = { path = "nativelink-util" }
nativelink-worker = { path = "nativelink-worker" }

async-lock = { version = "3.4.0", features = ["std"], default-features = false }
axum = { version = "0.8.3", default-features = false }
clap = { version = "4.5.35", features = ["derive"] }
futures = { version = "0.3.31", default-features = false }
hyper = "1.6.0"
hyper-util = "0.1.11"
mimalloc = "0.1.44"
opentelemetry = { version = "0.29.1", default-features = false }
opentelemetry_sdk = { version = "0.29.0", default-features = false }
parking_lot = "0.12.3"
rustls-pemfile = { version = "2.2.0", features = [
  "std",
], default-features = false }
scopeguard = { version = "1.2.0", default-features = false }
serde_json5 = "0.2.1"
tokio = { version = "1.44.1", features = [
  "fs",
  "io-util",
  "rt-multi-thread",
  "signal",
], default-features = false }
tokio-rustls = { version = "0.26.2", default-features = false, features = [
  "ring",
] }
tonic = { version = "0.13.0", features = [
  "tls-ring",
  "transport",
], default-features = false }
tower = { version = "0.5.2", default-features = false }
tracing = { version = "0.1.41", default-features = false }
tracing-subscriber = { version = "0.3.19", default-features = false }

[workspace.cargo-features-manager.keep]
async-lock = ["std"]
aws-sdk-s3 = ["rt-tokio"]
aws-smithy-runtime = ["test-util"]
# This causes blake3 to detect SIMD capabilities at runtime.
blake3 = ["std"]
pretty_assertions = ["std"]
redis-test = ["aio"]
serial_test = ["async"]
tokio = ["fs", "io-util", "rt-multi-thread", "signal"]
tokio-stream = ["fs"]
tonic = ["tls", "transport"]
tonic-build = ["prost"]
uuid = ["serde", "v4"]

[workspace.lints.rust]
ambiguous-glob-reexports = "deny"
clashing-extern-declarations = "deny"
const-item-mutation = "deny"
dangling-pointers-from-temporaries = "deny"
deref-nullptr = "deny"
drop-bounds = "deny"
future-incompatible = "deny"
hidden-glob-reexports = "deny"
improper-ctypes = "deny"
improper-ctypes-definitions = "deny"
invalid-from-utf8 = "deny"
invalid-macro-export-arguments = "deny"
invalid-nan-comparisons = "deny"
invalid-reference-casting = "deny"
invalid-value = "deny"
opaque-hidden-inferred-bound = "deny"
overlapping-range-endpoints = "deny"
suspicious-double-ref-op = "deny"
unconditional-recursion = "deny"
unexpected-cfgs = "deny"
unnameable-test-items = "deny"
unsafe-op-in-unsafe-fn = "deny"
unstable-syntax-pre-expansion = "deny"

keyword-idents = "warn"
let-underscore = "warn"
macro-use-extern-crate = "warn"
meta-variable-misuse = "warn"
missing-abi = "warn"
missing-copy-implementations = "warn"
missing-debug-implementations = "warn"
noop-method-call = "warn"
single-use-lifetimes = "warn"
trivial-casts = "warn"
trivial-numeric-casts = "warn"
unreachable-pub = "warn"
unused = { level = "warn", priority = -1 }
unused-import-braces = "warn"
unused-lifetimes = "warn"
unused-qualifications = "warn"
variant-size-differences = "warn"

[workspace.lints.clippy]

# Global configuration
all = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }

# Denies with default priority
alloc-instead-of-core = "deny"
as-underscore = "deny"
cast-lossless = "deny"
default-trait-access = "deny"
doc-markdown = "deny"
explicit-deref-methods = "deny"
explicit-into-iter-loop = "deny"
explicit-iter-loop = "deny"
ignored-unit-patterns = "deny"
implicit-clone = "deny"
implicit-hasher = "deny"
inconsistent-struct-constructor = "deny"
inline-always = "deny"
items-after-statements = "deny"
manual-let-else = "deny"
manual-string-new = "deny"
map-unwrap-or = "deny"
match-same-arms = "deny"
match-wildcard-for-single-variants = "deny"
missing-const-for-fn = "deny"
needless-continue = "deny"
needless-pass-by-value = "deny"
needless-raw-string-hashes = "deny"
ptr-as-ptr = "deny"
range-plus-one = "deny"
redundant-closure-for-method-calls = "deny"
redundant-else = "deny"
ref-as-ptr = "deny"
return-self-not-must-use = "deny"
semicolon-if-nothing-returned = "deny"
single-match-else = "deny"
stable-sort-primitive = "deny"
std-instead-of-core = "deny"
struct-field-names = "deny"
trivially-copy-pass-by-ref = "deny"
uninlined-format-args = "deny"
unnecessary-wraps = "deny"
unreadable-literal = "deny"
wildcard-imports = "deny"
option-if-let-else = "deny"

# Warnings with default priority
dbg-macro = "warn"
decimal-literal-representation = "warn"
explicit-auto-deref = "warn"
# get-unwrap = "warn" # TODO(jhpratt) uncomment this
# missing-docs-in-private-items = "warn" # TODO(jhpratt) uncomment this
missing-enforced-import-renames = "warn"
obfuscated-if-else = "warn"
print-stdout = "warn"
todo = "warn"
unimplemented = "warn"
unnested-or-patterns = "warn"
# unwrap-in-result = "warn" # TODO(jhpratt) uncomment this
# unwrap-used = "warn" # TODO(jhpratt) uncomment this
use-debug = "warn"

# Overrides
fallible-impl-from = { level = "allow", priority = 1 }          # TODO(jhpratt) remove this
iter-with-drain = { level = "allow", priority = 1 }             # TODO(jhpratt) remove this
redundant-pub-crate = { level = "allow", priority = 1 }         # rust-lang/rust-clippy#5369, overrides #![warn(clippy::nursery)]
significant-drop-tightening = { level = "allow", priority = 1 } # TODO(jhpratt) remove this
too-long-first-doc-paragraph = { level = "allow" }              # TODO(jhpratt) remove this
uninhabited-references = { level = "allow", priority = 1 }      # rust-lang/rust-clippy#11984

# TODO(aaronmondal): Remove these to get to pedantic.
cast_possible_truncation = { level = "allow", priority = 1 }
cast_possible_wrap = { level = "allow", priority = 1 }
cast_precision_loss = { level = "allow", priority = 1 }
cast_sign_loss = { level = "allow", priority = 1 }
doc_link_with_quotes = { level = "allow", priority = 1 }
from_iter_instead_of_collect = { level = "allow", priority = 1 }
if_not_else = { level = "allow", priority = 1 }
large_futures = { level = "allow", priority = 1 }
missing_errors_doc = { level = "allow", priority = 1 }
missing_fields_in_debug = { level = "allow", priority = 1 }
missing_panics_doc = { level = "allow", priority = 1 }
must_use_candidate = { level = "allow", priority = 1 }
option_option = { level = "allow", priority = 1 }
ref_option = { level = "allow", priority = 1 }
similar_names = { level = "allow", priority = 1 }
too_many_lines = { level = "allow", priority = 1 }
unnecessary_semicolon = { level = "allow", priority = 1 }
unused_async = { level = "allow", priority = 1 }
unused_self = { level = "allow", priority = 1 }
used_underscore_binding = { level = "allow", priority = 1 }
