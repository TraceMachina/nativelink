# OpenTelemetry Collector Deployment for NativeLink Metrics
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: nativelink
data:
  collector.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

    processors:
      resource:
        attributes:
          - key: service.namespace
            value: nativelink
            action: upsert
          - key: k8s.cluster.name
            from_attribute: K8S_CLUSTER_NAME
            action: insert
          - key: deployment.environment
            from_attribute: DEPLOYMENT_ENV
            action: insert

      transform/nativelink:
        metric_statements:
          - context: datapoint
            statements:
              - set(attributes["instance_name"], resource.attributes["nativelink.instance_name"])
                where resource.attributes["nativelink.instance_name"] != nil

      batch:
        timeout: 10s
        send_batch_size: 1024

      memory_limiter:
        check_interval: 1s
        limit_mib: 1024
        spike_limit_mib: 256

    exporters:
      prometheus:
        endpoint: 0.0.0.0:9090
        namespace: nativelink
        resource_to_telemetry_conversion:
          enabled: true
        enable_open_metrics: true

      otlphttp/prometheus:
        endpoint: http://prometheus:9090/api/v1/otlp/v1/metrics
        compression: gzip

    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      pprof:
        endpoint: 0.0.0.0:1777
      zpages:
        endpoint: 0.0.0.0:55679

    service:
      extensions: [health_check, pprof, zpages]
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [memory_limiter, resource, transform/nativelink, batch]
          exporters: [prometheus]
        metrics/prometheus_otlp:
          receivers: [otlp]
          processors: [memory_limiter, resource, transform/nativelink, batch]
          exporters: [otlphttp/prometheus]

      telemetry:
        logs:
          level: info
        metrics:
          level: detailed
          address: 0.0.0.0:8888

---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: nativelink
  labels:
    app: otel-collector
spec:
  type: ClusterIP
  selector:
    app: otel-collector
  ports:
    - name: otlp-grpc
      port: 4317
      targetPort: 4317
      protocol: TCP
    - name: otlp-http
      port: 4318
      targetPort: 4318
      protocol: TCP
    - name: prometheus
      port: 9090
      targetPort: 9090
      protocol: TCP
    - name: metrics
      port: 8888
      targetPort: 8888
      protocol: TCP
    - name: health
      port: 13133
      targetPort: 13133
      protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: nativelink
  labels:
    app: otel-collector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      serviceAccountName: otel-collector
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector-contrib:0.98.0
          args:
            - "--config=/conf/collector.yaml"
          ports:
            - containerPort: 4317
              name: otlp-grpc
            - containerPort: 4318
              name: otlp-http
            - containerPort: 9090
              name: prometheus
            - containerPort: 8888
              name: metrics
            - containerPort: 13133
              name: health
          env:
            - name: K8S_CLUSTER_NAME
              value: "nativelink-cluster"
            - name: DEPLOYMENT_ENV
              value: "production"
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: config
              mountPath: /conf
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /
              port: 13133
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 13133
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: config
          configMap:
            name: otel-collector-config

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector
  namespace: nativelink

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector
rules:
  - apiGroups: [""]
    resources: ["pods", "namespaces", "nodes"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments", "daemonsets", "statefulsets", "replicasets"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "watch", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: otel-collector
subjects:
  - kind: ServiceAccount
    name: otel-collector
    namespace: nativelink

---
# HorizontalPodAutoscaler for OTEL Collector
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: otel-collector
  namespace: nativelink
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: otel-collector
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---
# PodDisruptionBudget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: otel-collector
  namespace: nativelink
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: otel-collector
