# Copyright 2024 The NativeLink Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file is @generated by lre-rs.

"""Tool repository for lre-rs executing on x86_64-linux."""

load("@rules_rust//rust:toolchain.bzl", "rust_stdlib_filegroup")

[
    filegroup(
        name = tool,
        srcs = [
            "bin/{}".format(tool),
        ],
        visibility = ["//visibility:public"],
    )
    for tool in [
        "rustc",
        "rustfmt",
        "cargo",
        "cargo-clippy",
        "clippy-driver",
        "rustdoc",
    ]
]

filegroup(
    name = "rustc_lib",
    srcs = select({
        "@local-remote-execution//rust/triple:aarch64-unknown-linux-gnu": glob([
            "bin/*.so",
            "lib/*.so",
            "lib/rustlib/aarch64-unknown-linux-gnu/codegen-backends/*.so",
            "lib/rustlib/aarch64-unknown-linux-gnu/bin/rust-lld",
            "lib/rustlib/aarch64-unknown-linux-gnu/lib/*.so",
        ], allow_empty = True),
        "@local-remote-execution//rust/triple:aarch64-unknown-linux-musl": glob([
            "bin/*.so",
            "lib/*.so",
            "lib/rustlib/aarch64-unknown-linux-musl/codegen-backends/*.so",
            "lib/rustlib/aarch64-unknown-linux-musl/bin/rust-lld",
            "lib/rustlib/aarch64-unknown-linux-musl/lib/*.so",
        ], allow_empty = True),
        "@local-remote-execution//rust/triple:x86_64-unknown-linux-gnu": glob([
            "bin/*.so",
            "lib/*.so",
            "lib/rustlib/x86_64-unknown-linux-gnu/codegen-backends/*.so",
            "lib/rustlib/x86_64-unknown-linux-gnu/bin/rust-lld",
            "lib/rustlib/x86_64-unknown-linux-gnu/lib/*.so",
        ], allow_empty = True),
        "@local-remote-execution//rust/triple:x86_64-unknown-linux-musl": glob([
            "bin/*.so",
            "lib/*.so",
            "lib/rustlib/x86_64-unknown-linux-musl/codegen-backends/*.so",
            "lib/rustlib/x86_64-unknown-linux-musl/bin/rust-lld",
            "lib/rustlib/x86_64-unknown-linux-musl/lib/*.so",
        ], allow_empty = True),
    }),
    visibility = ["//visibility:public"],
)

rust_stdlib_filegroup(
    name = "rust_std",
    srcs = select({
        "@local-remote-execution//rust/triple:aarch64-unknown-linux-gnu": glob([
            "lib/rustlib/aarch64-unknown-linux-gnu/lib/*.rlib",
            "lib/rustlib/aarch64-unknown-linux-gnu/lib/*.so",
            "lib/rustlib/aarch64-unknown-linux-gnu/lib/*.a",
        ], allow_empty = True),
        "@local-remote-execution//rust/triple:aarch64-unknown-linux-musl": glob([
            "lib/rustlib/aarch64-unknown-linux-musl/lib/*.rlib",
            "lib/rustlib/aarch64-unknown-linux-musl/lib/*.so",
            "lib/rustlib/aarch64-unknown-linux-musl/lib/*.a",
            "lib/rustlib/aarch64-unknown-linux-musl/lib/self-contained/**",
        ], allow_empty = True),
        "@local-remote-execution//rust/triple:x86_64-unknown-linux-gnu": glob([
            "lib/rustlib/x86_64-unknown-linux-gnu/lib/*.rlib",
            "lib/rustlib/x86_64-unknown-linux-gnu/lib/*.so",
            "lib/rustlib/x86_64-unknown-linux-gnu/lib/*.a",
        ], allow_empty = True),
        "@local-remote-execution//rust/triple:x86_64-unknown-linux-musl": glob([
            "lib/rustlib/x86_64-unknown-linux-musl/lib/*.rlib",
            "lib/rustlib/x86_64-unknown-linux-musl/lib/*.so",
            "lib/rustlib/x86_64-unknown-linux-musl/lib/*.a",
            "lib/rustlib/x86_64-unknown-linux-musl/lib/self-contained/**",
        ], allow_empty = True),
    }),
    visibility = ["//visibility:public"],
)
