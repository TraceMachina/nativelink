load(
    "@rules_rust//rust:defs.bzl",
    "rust_doc",
    "rust_doc_test",
    "rust_library",
    "rust_test_suite",
)

rust_library(
    name = "nativelink-service",
    srcs = [
        "src/ac_server.rs",
        "src/bep_server.rs",
        "src/bytestream_server.rs",
        "src/capabilities_server.rs",
        "src/cas_server.rs",
        "src/execution_server.rs",
        "src/health_server.rs",
        "src/lib.rs",
        "src/worker_api_server.rs",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//nativelink-config",
        "//nativelink-error",
        "//nativelink-proto",
        "//nativelink-scheduler",
        "//nativelink-store",
        "//nativelink-util",
        "@crates//:axum",
        "@crates//:bytes",
        "@crates//:futures",
        "@crates//:http-body",
        "@crates//:http-body-util",
        "@crates//:hyper-1.5.2",
        "@crates//:parking_lot",
        "@crates//:prost",
        "@crates//:serde_json5",
        "@crates//:tokio",
        "@crates//:tonic",
        "@crates//:tower",
        "@crates//:tracing",
        "@crates//:uuid",
    ],
)

rust_test_suite(
    name = "integration",
    timeout = "short",
    srcs = [
        "tests/ac_server_test.rs",
        "tests/bep_server_test.rs",
        "tests/bytestream_server_test.rs",
        "tests/cas_server_test.rs",
        "tests/store_overlap_rules_test.rs",
        "tests/worker_api_server_test.rs",
    ],
    proc_macro_deps = [
        "//nativelink-macro",
        "@crates//:async-trait",
    ],
    deps = [
        "//nativelink-config",
        "//nativelink-error",
        "//nativelink-metric",
        "//nativelink-proto",
        "//nativelink-scheduler",
        "//nativelink-service",
        "//nativelink-store",
        "//nativelink-util",
        "@crates//:async-lock",
        "@crates//:bytes",
        "@crates//:futures",
        "@crates//:http-body-util",
        "@crates//:hyper-1.5.2",
        "@crates//:hyper-util",
        "@crates//:maplit",
        "@crates//:pretty_assertions",
        "@crates//:prost",
        "@crates//:prost-types",
        "@crates//:tokio",
        "@crates//:tokio-stream",
        "@crates//:tonic",
        "@crates//:tower",
    ],
)

rust_doc(
    name = "docs",
    crate = ":nativelink-service",
    visibility = ["//visibility:public"],
)

rust_doc_test(
    name = "doc_test",
    timeout = "short",
    crate = ":nativelink-service",
)
